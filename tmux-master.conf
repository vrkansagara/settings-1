# Use C-a instead of C-b
set -g prefix C-a
unbind C-b

# Make it easy to re-source this file -- Prefix r
bind r source-file ~/.tmux.conf \; display "tmux.conf Reloaded!"

# Use vi keys
setw -g mode-keys vi
set -g status-keys vi

# This supposedly should help apps such as mutt or slrn
setw -g alternate-screen on

#######################################################################
# Copy mode and selection
#######################################################################
# vim-style selections and yanking
# unbind p
# bind p paste-buffer
# The following are legacy:
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection
# These are from https://github.com/tmux/tmux/issues/754#issuecomment-297452143
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection

# integration with xclip: C-c to copy to x clipboard, C-v to paste from it
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

#######################################################################
# Window and Pane bindings
#######################################################################

# Index windows and panes starting at 1
set -g base-index 1
setw -g pane-base-index 1

# Bind C-a C-a to switch to last active window (ala screen)
# Disabling, as this means we can't send C-a to the shell or other programs
# bind-key C-a last-window
# Instead, setting it to re-send to the shell
bind C-a send-prefix

# Binding -/| to pane splitting:
unbind %
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Remap pane selection to VI keys; all start with Prefix
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Cycle through windows; Prefix C-h, Prefix C-l
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Mouse settings
set -g mouse on
# Middle-click to paste a selection from another window.
# To select and paste text WITHIN a tmux window, hold shift + (left-button: select; middle-button: paste)
bind -T root MouseDown2Pane run -b "xclip -o | tmux load-buffer - && tmux paste-buffer -s ' '"

# DO NOT automatically set window title based on active program
setw -g automatic-rename off
set -g allow-rename off

# DO allow setting the window title programmatically, though.
# Do so using:
# $ echo -n "\033]0;<title>\e"
set -g set-titles on
set -g set-titles-string '#T'

#######################################################################
# Status Bar
#######################################################################

# black background, white text
set -g status-bg black
set -g status-fg white

# Non-active windows: cyan on black, dimmed
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

# Active window: white on red, bright
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-attr bright

# Make active pane more apparent
# Normal panes: green on black border
set -g pane-border-fg green
set -g pane-border-bg black
# Active pane: white on yellow border
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow

# Make command line messages stand out better
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Get alerts of activity in other windows
setw -g monitor-activity on
set -g visual-activity on
set -g visual-bell on

# Old powerline location, when installed via pip:
# source "$HOME/.local/lib/python3.5/site-packages/powerline/bindings/tmux/powerline.conf"
# Distribution powerline location, as of ubuntu 17.10:
source "/usr/share/powerline/bindings/tmux/powerline.conf"
set-option -g status-interval 15

# tmux-resurrect (https://github.com/tmux-plugins/tmux-resurrect)
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save-shell-history 'on'

# tmux-continuum (https://github.com/tmux-plugins/tmux-continuum)
set -g @continuum-restore 'on'

# tmux-open (https://github.com/tmux-plugins/tmux-open)
# run-shell $HOME/.tmux/plugins/tmux-open/open.tmux

# tmux-yank (https://github.com/tmux-plugins/tmux-yank)
set -g @shell_mode 'vi'

# tmux-copycat (https://github.com/tmux-plugins/tmux-copycat)

# vim-tmux-navigator integration
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Plugins to load
set -g @plugin 'tmux-plugins/tmp'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TMUX plugin manager
run "$HOME/.tmux/plugins/tpm/tpm"
